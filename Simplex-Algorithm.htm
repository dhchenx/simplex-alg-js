<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>The Simplex Algorithm Developed by Donghua Chen</title>
    <style>
    input
    {
         font-size:medium;
    }
        .style1
        {
            width: 105px;
        }
    </style>
</head>
<script type="text/javascript">
    var VN;
    var CN;
    var th = new Array();
    var bv = new Array();
    var zx;
    var zy;
    var step=0;
    function initvalue() {
        xx0.value = -2; xx1.value = -1;
        x00.value = 0; x01.value = 5;
        x10.value = 6; x11.value = 2;
        x20.value = 1; x21.value = 1;
        b0.value = 15;
        b1.value = 24;
        b2.value = 5;

    }
    function initM() {
        xx0.value = 2; xx1.value = 3;
        x00.value = 0.5; x01.value = .25;
        x10.value = 1; x11.value = 3;
        x20.value = 1; x21.value = 1;
        b0.value = 4;
        b1.value = 20;
        b2.value = 10;
    }
    function CreateOJ() {
        // create objective function
        var s;
        var ROW;
        var COL;
        s = objecttype.options[objecttype.selectedIndex].text + " Z = ";
        VN = nvar.value;
        CN = ncon.value;
        var i;
        for (i = 0; i < VN; i++) {
            value = "x" + (i + 1);
            s += "<input type='text' id='xx" + i + "' size='4'/>" + "<input type='text' value='" + value + "' id='th" + i + "' size='3' />";
            if (i != VN - 1) {
                s += " + ";
            }
        }
        of.innerHTML = s;

        var constring;
        var temp = "";
        for (j = 0; j < CN; j++) {
            for (i = 0; i < VN; i++) {
                temp += "<input type='text' id='x" + j + i + "' size='3'/><font> </font>" + "<font id='fo_" + i + "' > " + document.getElementById("th" + i).value + " </font>";
                if (i != VN - 1) {
                    temp += " + ";
                }
            }
            temp += "<select id='equ" + j + "' >";
            temp += "<option value='less' selected='selected'>&lt;=</option>";
            temp += "<option value='larger' >&gt;=</option>";
            temp += "<option value='equal'>=</option>";
            temp += "</select><font> </font>";
            temp += "<input type='text' id='b" + j + "' size='3' /><br/>";
        }
        constr.innerHTML = temp;
    }
  
</script>
<script type="text/javascript">
 var a=new Array();
 var b=new Array();
 var M = new Array();
 var row;
 var col;
 function begin() {
 
     a = new Array(4);
     for (i = 0; i < a.length; i++) {
         a[i] = new Array(6);
     }
     M = new Array(6);
     b = new Array(4);
    	row=4;
    	col=6;
    	a[0][0]=-2;a[0][1]=-3;a[0][2]=0;a[0][3]=0;a[0][4]=0;a[0][5]=0;
    	a[1][0]=0.5;a[1][1]=0.25;a[1][2]=0;a[1][3]=0;a[1][4]=0;a[1][5]=0;
    	a[2][0]=1;a[2][1]=3;a[2][2]=0;a[2][3]=-1;a[2][4]=1;a[2][5]=0;
    	a[3][0]=1.0;a[3][1]=1;a[3][2]=0;a[3][3]=0;a[3][4]=0;a[3][5]=1;
    	b[0]=0;b[1]=4;b[2]=20;b[3]=10;
    	M[0] = 2; M[1] = 4; M[2] = 0; M[3] = -1; M[4] = 0; M[5] = 0; M[6] = 30;
    	showtable();
    	checkmax();

 }
 function solve() {
         check();  
 }

 function showtable() {
     display.innerHTML += NewTable();
 }
function check()
{
    	
    	var max=-1000.0;
    	var  m=-100;
    	var maxm=-1000.0;
    	var mm=-1;
    	var tz = -1;
    	var i;
    	for(i=0;i<M.length-1;i++){
    		if(M[i]>maxm){
    			maxm=M[i];
    			mm=i;
    		}
    		if(M[i]!=0){
    			tz=0;
    		}
    	}


if (maxm <= 0 && maxm != -1000.0 && tz == 0) {
    alert("Reach Optimal!");
           display.innerHTML+= "Reach Optimal, We get the optimal solution";
    		return "";
    	}
    	
    	if(tz!=0)
    	{
    	for(i=0;i<M.length-1;i++){
    			if(a[0][i]>max){
    				m=i;
    				max=a[0][i];
    			}
    		
    	}
if (max <= 0) {
    alert("Reach Optimal!");
    display.innerHTML+= "Reach Optimal, We get the optimal solution";
      
    		return "";
    	}
    	}else{
    		m=mm;
    	}
        
    	var vj=m;
    	var vi=0;
    	var INF=9e9;
    	var test=INF;
    	var minn=INF;
    	var aa;
    	for(i=1;i<row;i++){
    		if(a[i][vj]==0)
    			test=INF;
    		else
    		test=b[i]/a[i][vj];
    		if(test<minn){
    			vi=i;
    			minn=test;
    		}
    	}
    	bv[vi] = vj;
if (minn == INF || vi == 0) {
    message.innerHTML = "no solution";
    		return;
    	}
        var mpt=a[vi][vj];
    	for(j=0;j<col;j++){
          var cc;    	 
    		cc=a[vi][j]/mpt;
    		a[vi][j]=cc ;
    		
    	}
    	b[vi]=b[vi]/mpt;
    	var mmp=0;
    	mmp=M[vj];
    	var mmj=0;
    	mmj=a[0][vj];
    	for(j=0;j<col;j++){
    		a[0][j]-=a[vi][j]*mmj;
    		M[j]-=a[vi][j]*mmp;
    	//	System.out.println("M["+j+"] = "+M[j]+"-"+a[vi][j]+"*"+M[vj]+" = "+M[j]);
    		if(j==col-1){
    			 b[0]-=b[vi]*mmj;
    	    	 M[M.length-1]-=b[vi]*mmp;
    		}
    	}
    	
    	for(i=1;i<row;i++){
    		mpt=a[i][vj];
    		if(i!=vi){
    		for(j=0;j<col;j++){
    			a[i][j]-=a[vi][j]*mpt;    
    		}
    		b[i]-=b[vi]*mpt;
    		}
    	}
    	showtable();
    	check();
    }
    
    function NewTable() {

        var s = "<font><b>Step " + step + "</b></font><br/><table border='1' ><tr>";
        step++;
        var k;
        for (i = 0; i < col; i++) {
            s += "<td width='50'><b>" + th[i] + "</b></td>";
            k = i;
        }
        s += "<td width='50'><b>" + th[k+1] + "</b></td>";
        s += "<td width='50'><b>r.h.s</b></td>";
        s += "<td width='50'><b>bv</b></td></tr>";
        s += "<tr><td>M</td>";
        for (i = 0; i < col+1; i++) {
            s += "<td><input type='text' size='7' value='" + M[i] + "'/></td>";
        }
        s += "</tr>";
        for (i = 0; i < row; i++) {
            if (i == 0) {
                s += "<td width='30'>1</td>";
            } else {
                s += "<td width='30' >0</td>";
            }
            for (j = 0; j < col; j++) {
                s += "<td  ><input type='text' size='7' value='" + a[i][j] + "'/></td>"
            }
            s += "<td  ><input type='text' size='7' value='" + b[i] + "'/></td>";

            for (as = 0; as < col; as++) {
                var cd=-1;var cc = 0;
                if (a[i][as] == 1) {
                    for (bs = 1; bs < row; bs++) {
                        if (a[bs][as] == 0) {
                            cc++;
                        }
                    }
                    if (cc == row - 2) {
                        //found the base
                        s += "<td ><input type='text' size='7' value='" + th[as+1] + "=" + b[i] + "'/></td>";
                        break;
                    }
                }
            }
            s += "</tr>";

           
        }
        s += "</table>";

        return s;
    }

    function InitTable() {
        step = 0;
        display.innerHTML = "";
        var s;
        var t = new Array();
        var Count = parseInt(VN);
        //obtain total counts of the entire caculation table
        for (i = 0; i < CN; i++) {
            s = document.getElementById("equ" + i).options[document.getElementById("equ" + i).selectedIndex].text;
            if (s == "<=") {
                Count++;
            }
            if (s == ">=") {
                Count = Count + 2;
            }
            if (s == "=") {
                Count++;
            }
        }
        Count = Count + 1; //add z var
        //simplify the objective function
        t[0] = new Array(Count);
        var tt;
        t[0][0] = 1;
        var j;
        for (j = 1; j <= VN; j++) {

            // t[0][j] = -document.getElementById("X" + parseInt(jjj)).value;
            tt = -parseFloat(document.getElementById('xx' + (j - 1)).value);
            t[0][j] = tt;

        }
        for (k = j; k < Count; k++) {
            t[0][k] = 0;
        }

        //handle with table header
        th[0] = "z";
        for (k = 1; k <= VN; k++) {
            var xs = 0;
            xs = k - 1;
            th[k] = document.getElementById("th" + xs).value;

        }

        // handle the contrainsts
        var index;
        index = 1;
        for (i = 1; i <= CN; i++) {
            t[i] = new Array(Count);
            t[i][0] = 0;
            for (j = 1; j < Count; j++) {

                if (j <= VN) {
                    var temp;
                    temp = document.getElementById("x" + (i - 1) + (j - 1)).value;
                    t[i][j] = parseFloat(temp);
                }

                if (j > VN) {
                    t[i][j] = 0;

                }

            }
            var bb = "";
            var d = 0;
            bv = new Array(parseFloat(CN));
            bb = document.getElementById("equ" + (i - 1)).options[document.getElementById("equ" + (i - 1)).selectedIndex].text;
            aa = objecttype.options[objecttype.selectedIndex].text
            if (bb == "<=") {
                d = parseInt(VN) + parseInt(index);
                t[i][d] = 1;
                th[d] = "s" + i;
                 bv[index] = d;
                index++;

            }
            if (bb == ">=") {
                d = parseInt(VN) + parseInt(index);
                th[d] = "e" + i;
                t[i][d] = -1;
                index++;
                d = parseInt(VN) + parseInt(index);
                th[d] = "a" + i;
                t[i][d] = 1;
                if (aa == "MAX") {
                    t[0][d] = "M";
                } else {
                t[0][d] = "-M";
                }
                bv[index] = d;
                index++;
            }
            if (bb == "=") {
                d = parseInt(VN) + parseInt(index);
                th[d] = "a" + i;
                t[i][d] = 1;
                if (aa == "MAX") {
                    t[0][d] = "M";
                } else {
                    t[0][d] = "-M";
                }
               bv[index] = d;
                index++;
            }



        }
        //basic var rhs
        var rhs = new Array(parseInt(CN) + 1);
        rhs[0] = 0;
        for (i = 1; i < rhs.length; i++) {
            rhs[i] = parseFloat(document.getElementById("b" + (i - 1)).value);
        }

        ////////////////////////////////////////////////////////
        a = new Array(parseFloat(CN) + 1);
        for (i = 0; i < a.length; i++) {
            a[i] = new Array(Count - 1);
        }


        b = new Array(parseFloat(CN) + 1);
        
        row = parseFloat(CN) + 1;
        col = Count - 1;
        M = new Array(col+1);
        //////////////////////////////////////////////
        for (i = 0; i < row; i++) {
            for (j = 0; j < col; j++) {
                a[i][j] = t[i][j + 1];
            }
            b[i] = rhs[i];
        }
        //////////////////////////////////////////
        var te;
        for(i=0;i<col+1;i++)
        M[i]=0;
        for (j = 0; j < col; j++) {
            if (a[0][j] == "M"||a[0][j]=="-M") {
                for (i = 0; i < row; i++) {
                    if (parseInt(a[i][j]) == 1) {
                        for (k = 0; k < col; k++) {
                            if (aa == "MAX") {
                                M[k] -= a[i][k];
                            } else {
                                M[k] += a[i][k];
                            }
                            
                          
                        }
                        M[j] = 0;
                        a[0][j] = 0;
                        if (aa == "MAX") {
                            M[M.length - 1] -= b[i];
                        } else {
                            M[M.length - 1] += b[i];
                        }
                       
                       
                        break;
                    }
                }
            }
        }

        showtable();
    }
</script>
<body background="c.jpg" >
    <br />
    <table style="width: 107%;">
        <tr>
            <td class="style1">
<img width="100" src="bjlogo.jpg" /></td>
            <td>
                <h1>The Simplex Algorithm &amp; Big M Method Program</h1>
            </td>
        </tr>
        <tr>
            <td class="style1">
            </td>
            <td>
                <div>Developer: Donghua Chen&nbsp;<br />
&nbsp;<br />
                    </div>
            </td>
        </tr>
        <tr>
            <td class="style1">
                &nbsp;</td>
            <td>
                <hr />
<font> Objective Function Type:&nbsp;&nbsp;&nbsp; 
    </font><select id="objecttype" name="D1" >
<option value="MAX" >MAX</option>
<option value="MIN" selected="selected">MIN</option>
</select><br />
                <br />
<font>The Number of Variances :&nbsp; &nbsp; </font><input type='text' id='nvar' 
                    style="width: 163px" /><br />
                <br />
<font>The Number of Constrains: </font>
&nbsp;&nbsp;
<input type='text' id='ncon' /><br />
                <br />
&nbsp;<input type="button" value="CreateTable" onclick="CreateOJ()" />&nbsp;&nbsp; <input type="button" value="Simple Example" onclick="initvalue()" />&nbsp;&nbsp;
<input type="button" value="BigM Example" onclick="initM()" />
            </td>
        </tr>
    </table>
<hr /> 
<div><b>Objective Function:</b></div>
<div id="of" align="center" >

</div>
<div><b>Subject TO:</b></div>
<div id="constr" align="center"> </div>

<hr />
<input type="button" value="InitTable" onclick="InitTable()"  id="beginbutton"/>
<input type="button" value="Do" onclick="solve()" id="bd" />
<div id="display" />
<div id="message" />
</body>
</html>
